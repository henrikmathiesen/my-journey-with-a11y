{{#> base title="3.3 Input Assistance - Accessible Forms" homeref="../../../" }}
    {{#*inline "content"}}

        <div class="col-lg-8">

            <h2>3.3 Input Assistance - Accessible Forms</h2>

            <form novalidate>

                <div class="form-row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="firstName">First Name (required)</label>
                            <input type="text" name="firstName" id="firstName" class="form-control" required>
                            <p class="invalid-feedback" id="firstName-validation-message">Please enter first name</p>
                        </div>

                        <div class="form-group">
                            <label for="lastName">Last Name (required)</label>
                            <input type="text" name="lastName" id="lastName" class="form-control" required>
                            <p class="invalid-feedback" id="lastName-validation-message">Please enter last name</p>
                        </div>

                        <div class="form-group">
                            <label for="dateOfBirth">Date of birth (required, yyyy-mm-dd)</label>
                            <input type="text" name="dateOfBirth" id="dateOfBirth" class="form-control" required data-required-format-date>
                            <p class="invalid-feedback" id="dateOfBirth-validation-message">Please enter date of birth in format yyyy-mm-dd</p>
                        </div>

                        <div class="form-group">
                            <label for="city">City (required)</label>
                            <select name="city" id="city" class="form-control" required>
                                <option value="">Select One</option>
                                <option value="Adamsburg">Adamsburg</option>
                                <option value="Bertilsburg">Bertilsburg</option>
                                <option value="Ceasarsburg">Ceasarsburg</option>
                            </select>
                            <p class="invalid-feedback" id="city-validation-message">Please select a city</p>
                        </div>

                        <div class="form-group">
                            <label for="favoriteFood">Favorite Food</label>
                            <input type="text" name="favoriteFood" id="favoriteFood" class="form-control">
                        </div>

                        <div>
                            <button id="submitButton" class="btn btn-primary btn-block">Submit</button>
                        </div>
                    </div>
                </div>

            </form>

        </div>

        <script>

            const $requiredInputs = document.querySelectorAll('[required]');
            const $requiredFormatDatesInputs = document.querySelectorAll('[data-required-format-date]');

            $requiredInputs.forEach(input => input.addEventListener('blur', _ => validateRequired(input)));
            $requiredFormatDatesInputs.forEach(input => input.addEventListener('blur', _ => validateDateFormat(input)));
            document.getElementById('submitButton').addEventListener('click', validateAll);

            function validateAll(e) {
                e.preventDefault();

                setTimeout(() => { 
                    $requiredInputs.forEach(input => validateRequired(input));
                    $requiredFormatDatesInputs.forEach(input => validateDateFormat(input));

                    const $invalidInputs = document.querySelectorAll('.is-invalid');

                    if ($invalidInputs.length) {
                        $invalidInputs[0].focus();
                    }
                });

            }

            function validateRequired(input) {
                if (input.value === '') {
                    setInvalid(input);
                } else {
                    setValid(input);
                }
            }

            function validateDateFormat(input) {
                const pattern = /^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/;

                if (input.value.match(pattern) == null) {
                    setInvalid(input);
                } else {
                    if (isCorrectDate(input.value) == false) {
                        setInvalid(input);
                    } else {
                        setValid(input);
                    }
                }
            }

            function isCorrectDate(value) {
                const noDashes = value.replace(/-/g, '');

                const yearPart = noDashes.slice(0, 4);
                const monthPart = noDashes.slice(4, 6);
                const dayPart = noDashes.slice(6, 8);

                const dateObj = new Date(`${yearPart}-${monthPart}-${dayPart}`);

                return dateObj.getFullYear() === +yearPart &&
                    (dateObj.getMonth() + 1) === +monthPart &&
                    dateObj.getDate() === +dayPart;
            }

            function setInvalid(input) {
                input.classList.add('is-invalid');
                input.setAttribute('aria-invalid', 'true')
                input.setAttribute('aria-describedBy', input.getAttribute('id') + '-validation-message');
            }

            function setValid(input) {
                input.classList.remove('is-invalid');
                input.removeAttribute('aria-invalid');
                input.removeAttribute('aria-describedBy');
            }

        </script>

    {{/inline}}
    {{/base}}
